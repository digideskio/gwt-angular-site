/*++
 * Template: ${templateFilename}
 * Provided: ${qualifiedName}
 * Generate: ${generatedQualifiedName}
 */
package ${packageName};

import java.util.*;

import com.google.gwt.core.client.*;
import com.asayama.gwt.core.client.*;
import com.asayama.gwt.angular.client.*;

public class ${generatedSimpleName} implements ${qualifiedName} {

    protected ${generatedSimpleName}() {
    }
    
    @Override
    public JSArray<Object> dependencies(${parameterClassType} object) {
        Class klass = object.getClass();
#foreach($returnClassType in ${returnClassTypes})
        if (klass.equals(${returnClassType.qualifiedSourceName}.class)) {
            return __${generatedSimpleName}_dependencies_${foreach.index}();
        }
#end
        return null;
    }

#foreach($dependency in ${dependencies})
    private native JSArray<Object> __${generatedSimpleName}_dependencies_${foreach.index}() /*-{
        return [
#foreach($name in ${dependency})
            '${name}'#if(${foreach.hasNext}),#end

#end
        ];
    }-*/;
#end

}
//--end of ${generatedQualifiedName}

