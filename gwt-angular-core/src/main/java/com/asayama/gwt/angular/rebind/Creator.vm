/*++
 * Template: Creator.vm
 * Provided: ${qualifiedName}
 * Generate: ${generatedQualifiedName}
 */
package ${packageName};

import java.util.*;

import com.google.gwt.core.client.*;
import com.asayama.gwt.core.client.*;
import com.asayama.gwt.angular.client.*;

public class ${generatedSimpleName}<${parameterClassType}> implements ${qualifiedName}<T> {

    protected ${generatedSimpleName}() {
    }
    
    @Override
    public T create(Class<? extends T> klass) {
        String name = klass.getName();
        GWT.log("creating " + name);
#foreach($returnClassType in ${returnClassTypes})
        if (klass.equals(${returnClassType.qualifiedSourceName}.class)) {
            return GWT.create(${returnClassType.qualifiedSourceName}.class);
        }
#end
        throw new UnsupportedOperationException(klass.getName() + " is not supported by ${qualifiedName}");
    }

    @Override
    public JSArray<Object> dependencies(Class<? extends T> klass) {
#foreach($returnClassType in ${returnClassTypes})
        if (klass.equals(${returnClassType.qualifiedSourceName}.class)) {
            return __${generatedSimpleName}_dependencies_${foreach.index}();
        }
#end
        return null;
    }

#foreach($dependency in ${dependencies})
    private native JSArray<Object> __${generatedSimpleName}_dependencies_${foreach.index}() /*-{
        return [#foreach($name in ${dependency})'${name}'#if(${foreach.hasNext}),#end#end];
    }-*/;
#end

}
//--end of ${generatedQualifiedName}

