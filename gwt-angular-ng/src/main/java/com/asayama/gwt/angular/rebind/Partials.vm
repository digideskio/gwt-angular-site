/*++
 * Provided: ${packageName}.${className}
 * Generate: ${packageName}.__${className}
 */
package ${packageName};

import com.asayama.gwt.angular.client.Partial;
import com.google.gwt.core.client.GWT;
import com.google.gwt.resources.client.ClientBundle;
import com.google.gwt.resources.client.DataResource;
import com.google.gwt.resources.client.DataResource.DoNotEmbed;
import com.google.gwt.resources.client.DataResource.MimeType;

public class __${className} implements ${className} {

	static final __${className}_ClientBundle BUNDLE = GWT.create(__${className}_ClientBundle.class);
#foreach($method in ${methods})

    ${method.getReadableDeclaration(false, false, false, false, true)} {
        Partial partial = GWT.create(Partial.class);
        partial.setResource(BUNDLE.${method.name}());
        return partial;
    }
#end
}
//--end of ${packageName}.__${className}

/*++
 * Generate: ${packageName}.__${className}_ClientBundle
 */
interface __${className}_ClientBundle extends ClientBundle {
#foreach($method in ${methods})

    @DoNotEmbed
    @MimeType("text/html")
    @Source("${methodProperties.get($method).getProperty('source')}")
    DataResource ${method.name}();
#end
}
//--end of ${packageName}.__${className}_ClientBundle

